{"ast":null,"code":"var _jsxFileName = \"C:\\\\Source Repo\\\\Projects\\\\Level 3\\\\Task 21\\\\hangman\\\\src\\\\components\\\\Display\\\\Display.js\";\n\n/**\r\n * this component will be used to display the user's progress in the game\r\n * each time the user guesses a letter incorrectly, this will display will update to reflect that\r\n */\nimport './Display.css';\nimport hangman_states from '../../assets/hangman_states';\nimport { Image, Card, Row, Col } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Display() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"display-content\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: '18rem'\n          },\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: \"Card Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n              className: \"mb-2 text-muted\",\n              children: \"Card Subtitle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Link, {\n              href: \"#\",\n              children: \"Card Link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Link, {\n              href: \"#\",\n              children: \"Another Link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: hangman_states[9]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Display;\nexport default Display;\n\nvar _c;\n\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"sources":["C:/Source Repo/Projects/Level 3/Task 21/hangman/src/components/Display/Display.js"],"names":["hangman_states","Image","Card","Row","Col","Display","width"],"mappings":";;AAAA;AACA;AACA;AACA;AACA,OAAO,eAAP;AACA,OAAOA,cAAP,MAA2B,6BAA3B;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,GAAtB,EAA2BC,GAA3B,QAAsC,iBAAtC;;;AAEA,SAASC,OAAT,GAAmB;AACf,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,2BACI,QAAC,GAAD;AAAA,8BACI,QAAC,GAAD;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAAb;AAAA,iCACI,QAAC,IAAD,CAAM,IAAN;AAAA,oCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,IAAD,CAAM,QAAN;AAAe,cAAA,SAAS,EAAC,iBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI,QAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAOI,QAAC,IAAD,CAAM,IAAN;AAAW,cAAA,IAAI,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ,eAQI,QAAC,IAAD,CAAM,IAAN;AAAW,cAAA,IAAI,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAeI,QAAC,GAAD;AAAA,+BAAK,QAAC,KAAD;AAAO,UAAA,GAAG,EAAEN,cAAc,CAAC,CAAD;AAA1B;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,cAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;;KAtBQK,O;AAwBT,eAAeA,OAAf","sourcesContent":["/**\r\n * this component will be used to display the user's progress in the game\r\n * each time the user guesses a letter incorrectly, this will display will update to reflect that\r\n */\r\nimport './Display.css';\r\nimport hangman_states from '../../assets/hangman_states';\r\nimport { Image, Card, Row, Col } from 'react-bootstrap';\r\n\r\nfunction Display() {\r\n    return (\r\n        <div className='display-content'>\r\n            <Row>\r\n                <Col>\r\n                    <Card style={{ width: '18rem' }}>\r\n                        <Card.Body>\r\n                            <Card.Title>Card Title</Card.Title>\r\n                            <Card.Subtitle className=\"mb-2 text-muted\">Card Subtitle</Card.Subtitle>\r\n                            <Card.Text>\r\n                                Some quick example text to build on the card title and make up the bulk of\r\n                                the card's content.\r\n                            </Card.Text>\r\n                            <Card.Link href=\"#\">Card Link</Card.Link>\r\n                            <Card.Link href=\"#\">Another Link</Card.Link>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col><Image src={hangman_states[9]} /></Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Display;"]},"metadata":{},"sourceType":"module"}